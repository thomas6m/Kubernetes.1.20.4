# Kubernetes.1.20.4-Installation

Kubernetes 1.20.4 installation on Centos8 with Flannel & CRI-O

[root@master ~]# kubectl get nodes
NAME      STATUS   ROLES                  AGE   VERSION
master    Ready    control-plane,master   24m   v1.20.4
worker1   Ready    worker                 20m   v1.20.4
worker2   Ready    worker                 19m   v1.20.4
[root@master ~]#



vi /etc/hosts

192.168.86.250	master.example.com	master
192.168.86.251	worker1.example.com	worker1
192.168.86.252	worker2.example.com	worker2



Disable swap:

	sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab

Disable IPv6:

cat <<EOF | sudo tee /etc/sysctl.d/70-ipv6.conf
net.ipv6.conf.all.disable_ipv6 = 1
net.ipv6.conf.default.disable_ipv6 = 1
EOF

sysctl --load /etc/sysctl.d/70-ipv6.conf

Install the required binaries: 
    
	dnf -y install net-tools telnet curl wget traceroute nmap-ncat git  httpd-tools jq  nfs-utils
 
Stop & disable firewalld :

    	systemctl stop firewalld && systemctl disable firewalld

Stop & disable Selinux :
    
    	sed -i s/^SELINUX=.*$/SELINUX=disabled/ /etc/selinux/config && setenforce 0


Install the latest Patches:

	dnf install -y epel-release && dnf update -y && reboot

----------------------------------------------
# Create the .conf file to load the modules at bootup

cat <<EOF | sudo tee /etc/modules-load.d/crio.conf
overlay
br_netfilter
EOF

modprobe overlay && modprobe br_netfilter

# Set up required sysctl params, these persist across reboots.
cat <<EOF | sudo tee /etc/sysctl.d/99-kubernetes-cri.conf
net.bridge.bridge-nf-call-iptables  = 1
net.ipv4.ip_forward                 = 1
net.bridge.bridge-nf-call-ip6tables = 1
EOF

sysctl --system
--------------------------------------
VERSION=1.20:1.20.0
OS=CentOS_8



curl -L -o /etc/yum.repos.d/devel:kubic:libcontainers:stable.repo https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/$OS/devel:kubic:libcontainers:stable.repo
curl -L -o /etc/yum.repos.d/devel:kubic:libcontainers:stable:cri-o:$VERSION.repo https://download.opensuse.org/repositories/devel:kubic:libcontainers:stable:cri-o:$VERSION/$OS/devel:kubic:libcontainers:stable:cri-o:$VERSION.repo
yum install -y cri-o

systemctl daemon-reload  && systemctl enable crio && systemctl start crio

mkdir /etc/crio/crio.conf.d/

cat <<EOF | sudo tee /etc/crio/crio.conf.d/02-cgroup-manager.conf
[crio.runtime]
conmon_cgroup = "pod"
cgroup_manager = "cgroupfs"
EOF


cat <<EOF | sudo tee /etc/modules-load.d/k8s.conf
br_netfilter
EOF

cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
EOF

sysctl --system

cat <<EOF | sudo tee /etc/yum.repos.d/kubernetes.repo
[kubernetes]
name=Kubernetes
baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-\$basearch
enabled=1
gpgcheck=1
repo_gpgcheck=1
gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
exclude=kubelet kubeadm kubectl
EOF



yum install -y kubelet kubeadm kubectl --disableexcludes=kubernetes

systemctl enable --now kubelet && systemctl enable kubelet && systemctl start kubelet

Reboot the server

wget https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml

grep Network kube-flannel.yml

kubeadm init --pod-network-cidr=10.244.0.0/16



https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/create-cluster-kubeadm/


  mkdir -p $HOME/.kube
  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
  sudo chown $(id -u):$(id -g) $HOME/.kube/config

export KUBECONFIG=/etc/kubernetes/admin.conf


kubeadm join 192.168.86.250:6443 --token 1yvsyg.x7hzku9nzh03vmu7 --discovery-token-ca-cert-hash sha256:aab265c2da1d81e84bc2aa3055725111e8aac1e3dadfbd045e5f1a2f2f3cf4de


kubectl label node worker1 node-role.kubernetes.io/worker=worker
kubectl label node worker2 node-role.kubernetes.io/worker=worker



















